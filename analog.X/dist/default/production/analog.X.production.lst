

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Mon Dec 19 03:58:52 2016

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 1.40
    16                           ; Generated 01/12/2016 GMT
    17                           ; 
    18                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F2550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _ADCON0	set	4034
    50  0000                     _ADCON2	set	4032
    51  0000                     _ADRESH	set	4036
    52  0000                     _ADRESL	set	4035
    53  0000                     _CCP1CON	set	4029
    54  0000                     _CCPR1L	set	4030
    55  0000                     _OSCCON	set	4051
    56  0000                     _PIR1bits	set	3998
    57  0000                     _PORTCbits	set	3970
    58  0000                     _PR2	set	4043
    59  0000                     _RCSTAbits	set	4011
    60  0000                     _T2CON	set	4042
    61  0000                     _TRISA	set	3986
    62  0000                     _TRISCbits	set	3988
    63  0000                     _TXREG	set	4013
    64  0000                     _TXSTAbits	set	4012
    65  0000                     _ADON	set	32272
    66  0000                     _GODONE	set	32273
    67                           
    68                           	psect	smallconst
    69  000800                     __psmallconst:
    70                           	opt stack 0
    71  000800  00                 	db	0
    72  000801                     STR_1:
    73  000801  48                 	db	72	;'H'
    74  000802  65                 	db	101	;'e'
    75  000803  6C                 	db	108	;'l'
    76  000804  6C                 	db	108	;'l'
    77  000805  6F                 	db	111	;'o'
    78  000806  0A                 	db	10
    79  000807  00                 	db	0
    80                           
    81                           ; #config settings
    82  000808  00                 	db	0	; dummy byte at the end
    83  0000                     
    84                           	psect	cinit
    85  000890                     __pcinit:
    86                           	opt stack 0
    87  000890                     start_initialization:
    88                           	opt stack 0
    89  000890                     __initialization:
    90                           	opt stack 0
    91  000890                     end_of_initialization:
    92                           	opt stack 0
    93  000890                     __end_of__initialization:
    94                           	opt stack 0
    95  000890  0E00               	movlw	low (__Lsmallconst shr (0+16))
    96  000892  6EF8               	movwf	tblptru,c
    97  000894  0E08               	movlw	high __Lsmallconst
    98  000896  6EF7               	movwf	tblptrh,c
    99  000898  0100               	movlb	0
   100  00089A  EF1E  F004         	goto	_main	;jump to C main() function
   101                           tblptru	equ	0xFF8
   102                           tblptrh	equ	0xFF7
   103                           
   104                           	psect	cstackCOMRAM
   105  000001                     __pcstackCOMRAM:
   106                           	opt stack 0
   107  000001                     ??_analogRead:
   108  000001                     putch@data:
   109                           	opt stack 0
   110                           
   111                           ; 1 bytes @ 0x0
   112  000001                     	ds	1
   113  000002                     ?_printf:
   114                           	opt stack 0
   115  000002                     printf@f:
   116                           	opt stack 0
   117                           
   118                           ; 2 bytes @ 0x1
   119  000002                     	ds	1
   120  000003                     analogRead@res:
   121                           	opt stack 0
   122                           
   123                           ; 2 bytes @ 0x2
   124  000003                     	ds	1
   125  000004                     printf@ap:
   126                           	opt stack 0
   127                           
   128                           ; 2 bytes @ 0x3
   129  000004                     	ds	2
   130  000006                     printf@c:
   131                           	opt stack 0
   132                           
   133                           ; 1 bytes @ 0x5
   134  000006                     	ds	1
   135  000007                     tblptru	equ	0xFF8
   136                           tblptrh	equ	0xFF7
   137                           
   138                           ; 1 bytes @ 0x6
   139 ;;
   140 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   141 ;;
   142 ;; *************** function _main *****************
   143 ;; Defined at:
   144 ;;		line 49 in file "main.c"
   145 ;; Parameters:    Size  Location     Type
   146 ;;		None
   147 ;; Auto vars:     Size  Location     Type
   148 ;;		None
   149 ;; Return value:  Size  Location     Type
   150 ;;                  1    wreg      void 
   151 ;; Registers used:
   152 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   153 ;; Tracked objects:
   154 ;;		On entry : 0/0
   155 ;;		On exit  : 0/0
   156 ;;		Unchanged: 0/0
   157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   158 ;;      Params:         0       0       0       0       0       0       0       0       0
   159 ;;      Locals:         0       0       0       0       0       0       0       0       0
   160 ;;      Temps:          0       0       0       0       0       0       0       0       0
   161 ;;      Totals:         0       0       0       0       0       0       0       0       0
   162 ;;Total ram usage:        0 bytes
   163 ;; Hardware stack levels required when called:    2
   164 ;; This function calls:
   165 ;;		_analogRead
   166 ;;		_printf
   167 ;; This function is called by:
   168 ;;		Startup code after reset
   169 ;; This function uses a non-reentrant model
   170 ;;
   171                           
   172                           	psect	text0
   173  00083C                     __ptext0:
   174                           	opt stack 0
   175  00083C                     _main:
   176                           	opt stack 29
   177                           
   178                           ;main.c: 50: TXSTAbits.TXEN = 1;
   179                           
   180                           ;incstack = 0
   181  00083C  8AAC               	bsf	4012,5,c	;volatile
   182                           
   183                           ;main.c: 51: RCSTAbits.SPEN = 1;
   184  00083E  8EAB               	bsf	4011,7,c	;volatile
   185                           
   186                           ;main.c: 52: TRISCbits.RC2 = 0;
   187  000840  9494               	bcf	3988,2,c	;volatile
   188                           
   189                           ;main.c: 53: PORTCbits.RC2 = 0;
   190  000842  9482               	bcf	3970,2,c	;volatile
   191                           
   192                           ;main.c: 55: PR2 = 0b00110001 ;
   193  000844  0E31               	movlw	49
   194  000846  6ECB               	movwf	4043,c	;volatile
   195                           
   196                           ;main.c: 56: T2CON = 0b00000101 ;
   197  000848  0E05               	movlw	5
   198  00084A  6ECA               	movwf	4042,c	;volatile
   199                           
   200                           ;main.c: 57: CCPR1L = 0b00100101 ;
   201  00084C  0E25               	movlw	37
   202  00084E  6EBE               	movwf	4030,c	;volatile
   203                           
   204                           ;main.c: 58: CCP1CON = 0b00011100 ;
   205  000850  0E1C               	movlw	28
   206  000852  6EBD               	movwf	4029,c	;volatile
   207  000854                     l732:
   208                           
   209                           ;main.c: 61: {
   210                           ;main.c: 62: analogRead();
   211  000854  EC05  F004         	call	_analogRead	;wreg free
   212                           
   213                           ;main.c: 63: printf("Hello\n");
   214  000858  0E01               	movlw	low STR_1
   215  00085A  6E02               	movwf	printf@f,c
   216  00085C  0E08               	movlw	high STR_1
   217  00085E  6E03               	movwf	printf@f+1,c
   218  000860  EC33  F004         	call	_printf	;wreg free
   219  000864  D7F7               	goto	l732
   220  000866                     __end_of_main:
   221                           	opt stack 0
   222                           tblptru	equ	0xFF8
   223                           tblptrh	equ	0xFF7
   224                           
   225 ;; *************** function _printf *****************
   226 ;; Defined at:
   227 ;;		line 464 in file "/opt/microchip/xc8/v1.40/sources/common/doprnt.c"
   228 ;; Parameters:    Size  Location     Type
   229 ;;  f               2    1[COMRAM] PTR const unsigned char 
   230 ;;		 -> STR_1(7), 
   231 ;; Auto vars:     Size  Location     Type
   232 ;;  tmpval          4    0        struct .
   233 ;;  cp              3    0        PTR const unsigned char 
   234 ;;  ap              2    3[COMRAM] PTR void [1]
   235 ;;		 -> ?_printf(2), 
   236 ;;  len             2    0        unsigned int 
   237 ;;  val             2    0        unsigned int 
   238 ;;  c               1    5[COMRAM] char 
   239 ;;  flag            1    0        unsigned char 
   240 ;;  prec            1    0        char 
   241 ;; Return value:  Size  Location     Type
   242 ;;                  2    1[COMRAM] int 
   243 ;; Registers used:
   244 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   245 ;; Tracked objects:
   246 ;;		On entry : 0/0
   247 ;;		On exit  : 0/0
   248 ;;		Unchanged: 0/0
   249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   250 ;;      Params:         2       0       0       0       0       0       0       0       0
   251 ;;      Locals:         3       0       0       0       0       0       0       0       0
   252 ;;      Temps:          0       0       0       0       0       0       0       0       0
   253 ;;      Totals:         5       0       0       0       0       0       0       0       0
   254 ;;Total ram usage:        5 bytes
   255 ;; Hardware stack levels used:    1
   256 ;; Hardware stack levels required when called:    1
   257 ;; This function calls:
   258 ;;		_putch
   259 ;; This function is called by:
   260 ;;		_main
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264                           	psect	text1
   265  000866                     __ptext1:
   266                           	opt stack 0
   267  000866                     _printf:
   268                           	opt stack 29
   269                           
   270                           ;doprnt.c: 466: va_list ap;
   271                           ;doprnt.c: 499: signed char c;
   272                           ;doprnt.c: 506: signed char prec;
   273                           ;doprnt.c: 508: unsigned char flag;
   274                           ;doprnt.c: 523: union {
   275                           ;doprnt.c: 524: unsigned long vd;
   276                           ;doprnt.c: 525: double integ;
   277                           ;doprnt.c: 526: } tmpval;
   278                           ;doprnt.c: 528: unsigned int val;
   279                           ;doprnt.c: 529: unsigned len;
   280                           ;doprnt.c: 530: const char * cp;
   281                           ;doprnt.c: 533: *ap = __va_start();
   282                           
   283                           ;incstack = 0
   284  000866  0E04               	movlw	low (?_printf+2)
   285  000868  6E04               	movwf	printf@ap,c
   286  00086A  0E00               	movlw	high (?_printf+2)
   287  00086C  6E05               	movwf	printf@ap+1,c
   288                           
   289                           ;doprnt.c: 536: while(c = *f++) {
   290  00086E  D003               	goto	l726
   291  000870                     l724:
   292                           
   293                           ;doprnt.c: 540: {
   294                           ;doprnt.c: 541: (putch(c) );
   295  000870  5006               	movf	printf@c,w,c
   296  000872  EC4F  F004         	call	_putch
   297  000876                     l726:
   298  000876  C002  FFF6         	movff	printf@f,tblptrl
   299  00087A  C003  FFF7         	movff	printf@f+1,tblptrh
   300  00087E  4A02               	infsnz	printf@f,f,c
   301  000880  2A03               	incf	printf@f+1,f,c
   302  000882                     	if	0	;tblptru may be non-zero
   303  000882                     	endif
   304  000882                     	if	0	;tblptru may be non-zero
   305  000882                     	endif
   306  000882  0008               	tblrd		*
   307  000884  CFF5 F006          	movff	tablat,printf@c
   308  000888  5006               	movf	printf@c,w,c
   309  00088A  B4D8               	btfsc	status,2,c
   310  00088C  0012               	return	
   311  00088E  D7F0               	goto	l724
   312  000890                     __end_of_printf:
   313                           	opt stack 0
   314                           tblptru	equ	0xFF8
   315                           tblptrh	equ	0xFF7
   316                           tblptrl	equ	0xFF6
   317                           tablat	equ	0xFF5
   318                           status	equ	0xFD8
   319                           
   320 ;; *************** function _putch *****************
   321 ;; Defined at:
   322 ;;		line 43 in file "main.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;  data            1    wreg     unsigned char 
   325 ;; Auto vars:     Size  Location     Type
   326 ;;  data            1    0[COMRAM] unsigned char 
   327 ;; Return value:  Size  Location     Type
   328 ;;                  1    wreg      void 
   329 ;; Registers used:
   330 ;;		wreg
   331 ;; Tracked objects:
   332 ;;		On entry : 0/0
   333 ;;		On exit  : 0/0
   334 ;;		Unchanged: 0/0
   335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   336 ;;      Params:         0       0       0       0       0       0       0       0       0
   337 ;;      Locals:         1       0       0       0       0       0       0       0       0
   338 ;;      Temps:          0       0       0       0       0       0       0       0       0
   339 ;;      Totals:         1       0       0       0       0       0       0       0       0
   340 ;;Total ram usage:        1 bytes
   341 ;; Hardware stack levels used:    1
   342 ;; This function calls:
   343 ;;		Nothing
   344 ;; This function is called by:
   345 ;;		_printf
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349                           	psect	text2
   350  00089E                     __ptext2:
   351                           	opt stack 0
   352  00089E                     _putch:
   353                           	opt stack 29
   354                           
   355                           ;incstack = 0
   356                           ;putch@data stored from wreg
   357  00089E  6E01               	movwf	putch@data,c
   358  0008A0                     l55:
   359  0008A0  A89E               	btfss	3998,4,c	;volatile
   360  0008A2  D7FE               	goto	l55
   361                           
   362                           ;main.c: 46: TXREG = data;
   363  0008A4  C001  FFAD         	movff	putch@data,4013	;volatile
   364  0008A8  0012               	return		;funcret
   365  0008AA                     __end_of_putch:
   366                           	opt stack 0
   367                           tblptru	equ	0xFF8
   368                           tblptrh	equ	0xFF7
   369                           tblptrl	equ	0xFF6
   370                           tablat	equ	0xFF5
   371                           status	equ	0xFD8
   372                           
   373 ;; *************** function _analogRead *****************
   374 ;; Defined at:
   375 ;;		line 25 in file "main.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;  res             2    2[COMRAM] unsigned int 
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, status,2, status,0
   384 ;; Tracked objects:
   385 ;;		On entry : 0/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   389 ;;      Params:         0       0       0       0       0       0       0       0       0
   390 ;;      Locals:         2       0       0       0       0       0       0       0       0
   391 ;;      Temps:          2       0       0       0       0       0       0       0       0
   392 ;;      Totals:         4       0       0       0       0       0       0       0       0
   393 ;;Total ram usage:        4 bytes
   394 ;; Hardware stack levels used:    1
   395 ;; This function calls:
   396 ;;		Nothing
   397 ;; This function is called by:
   398 ;;		_main
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           	psect	text3
   403  00080A                     __ptext3:
   404                           	opt stack 0
   405  00080A                     _analogRead:
   406                           	opt stack 30
   407                           
   408                           ;main.c: 27: unsigned int res;
   409                           ;main.c: 29: OSCCON = 0xF2;
   410                           
   411                           ;incstack = 0
   412  00080A  0EF2               	movlw	242
   413  00080C  6ED3               	movwf	4051,c	;volatile
   414                           
   415                           ;main.c: 30: TRISA = 0b00000001;
   416  00080E  0E01               	movlw	1
   417  000810  6E92               	movwf	3986,c	;volatile
   418                           
   419                           ;main.c: 32: ADCON2=0b10001010;
   420  000812  0E8A               	movlw	138
   421  000814  6EC0               	movwf	4032,c	;volatile
   422                           
   423                           ;main.c: 34: ADCON0 = 0b00000000;
   424  000816  0E00               	movlw	0
   425  000818  6EC2               	movwf	4034,c	;volatile
   426                           
   427                           ;main.c: 35: ADON = 1;
   428  00081A  80C2               	bsf	4034,0,c	;volatile
   429                           
   430                           ;main.c: 36: GODONE = 1;
   431  00081C  82C2               	bsf	4034,1,c	;volatile
   432  00081E                     l49:
   433  00081E  B2C2               	btfsc	4034,1,c	;volatile
   434  000820  D7FE               	goto	l49
   435                           
   436                           ;main.c: 39: ADON = 0;
   437  000822  90C2               	bcf	4034,0,c	;volatile
   438                           
   439                           ;main.c: 40: res = (ADRESH<<8)|ADRESL;
   440  000824  50C3               	movf	4035,w,c	;volatile
   441  000826  CFC4 F001          	movff	4036,??_analogRead	;volatile
   442  00082A  6A02               	clrf	(??_analogRead+1)& (0+255),c
   443  00082C  C001  F002         	movff	??_analogRead,??_analogRead+1
   444  000830  6A01               	clrf	??_analogRead,c
   445  000832  1001               	iorwf	??_analogRead,w,c
   446  000834  6E03               	movwf	analogRead@res,c
   447  000836  5002               	movf	??_analogRead+1,w,c
   448  000838  6E04               	movwf	analogRead@res+1,c
   449  00083A  0012               	return		;funcret
   450  00083C                     __end_of_analogRead:
   451                           	opt stack 0
   452                           tblptru	equ	0xFF8
   453                           tblptrh	equ	0xFF7
   454                           tblptrl	equ	0xFF6
   455                           tablat	equ	0xFF5
   456                           status	equ	0xFD8
   457                           tblptru	equ	0xFF8
   458                           tblptrh	equ	0xFF7
   459                           tblptrl	equ	0xFF6
   460                           tablat	equ	0xFF5
   461                           status	equ	0xFD8
   462                           
   463                           	psect	rparam
   464  0000                     tblptru	equ	0xFF8
   465                           tblptrh	equ	0xFF7
   466                           tblptrl	equ	0xFF6
   467                           tablat	equ	0xFF5
   468                           status	equ	0xFD8


Data Sizes:
    Strings     7
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     125
                         _analogRead
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     125
                                              1 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _analogRead                                           4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _analogRead
   _printf
     _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Mon Dec 19 03:58:52 2016

                     l55 08A0                       l49 081E                      l724 0870  
                    l732 0854                      l726 0876                      _PR2 000FCB  
           __CFG_WDT$OFF 000000                     _ADON 007E10                     STR_1 0801  
                   _main 083C                     start 0000             ___param_bank 000000  
                  ?_main 0001                    _T2CON 000FCA                    _TRISA 000F92  
                  _TXREG 000FAD                    _putch 089E                    tablat 000FF5  
                  status 000FD8          __initialization 0890             __end_of_main 0866  
                 ??_main 0007            __activetblptr 000001                   _ADCON0 000FC2  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR1L 000FBE                   ?_putch 0001                   _GODONE 007E11  
                 _OSCCON 000FD3                   _printf 0866             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 0890            ___rparam_used 000001  
         __pcstackCOMRAM 0001            __end_of_putch 08AA                  ??_putch 0001  
             _analogRead 080A                  _CCP1CON 000FBD                  ?_printf 0002  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 0890                  __ramtop 0800                  __ptext0 083C  
                __ptext1 0866                  __ptext2 089E                  __ptext3 080A  
        __size_of_printf 002A     end_of_initialization 0890            analogRead@res 0003  
            ?_analogRead 0001                _RCSTAbits 000FAB                  printf@c 0006  
                printf@f 0002                _PORTCbits 000F82                _TRISCbits 000F94  
              _TXSTAbits 000FAC           __end_of_printf 0890      __size_of_analogRead 0032  
    start_initialization 0890                 ??_printf 0004              __smallconst 0800  
         __size_of_putch 000C             ??_analogRead 0001                 _PIR1bits 000F9E  
     __end_of_analogRead 083C                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0800            __size_of_main 002A                putch@data 0001  
               printf@ap 0004      __CFG_FOSC$INTOSC_EC 000000  
