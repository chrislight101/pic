

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Jul 16 03:06:52 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    16  0000                     _LATAbits	set	3977
    17  0000                     _OSCCON	set	4051
    18  0000                     _PORTAbits	set	3968
    19  0000                     _TRISAbits	set	3986
    20                           
    21                           ; #config settings
    22  0000                     
    23                           	psect	cinit
    24  007B4A                     __pcinit:
    25                           	opt stack 0
    26  007B4A                     start_initialization:
    27                           	opt stack 0
    28  007B4A                     __initialization:
    29                           	opt stack 0
    30  007B4A                     end_of_initialization:
    31                           	opt stack 0
    32  007B4A                     __end_of__initialization:
    33                           	opt stack 0
    34  007B4A  0E00               	movlw	low (__Lmediumconst shr (0+16))
    35  007B4C  6EF8               	movwf	tblptru,c
    36  007B4E  0100               	movlb	0
    37  007B50  EF56  F03F         	goto	_main	;jump to C main() function
    38                           tblptru	equ	0xFF8
    39                           
    40                           	psect	cstackCOMRAM
    41  000001                     __pcstackCOMRAM:
    42                           	opt stack 0
    43  000001                     ?___wmul:
    44                           	opt stack 0
    45  000001                     ?___ftpack:
    46                           	opt stack 0
    47  000001                     ?___fttol:
    48                           	opt stack 0
    49  000001                     ___wmul@multiplier:
    50                           	opt stack 0
    51  000001                     ___ftpack@arg:
    52                           	opt stack 0
    53  000001                     ___fttol@f1:
    54                           	opt stack 0
    55                           
    56                           ; 3 bytes @ 0x0
    57  000001                     	ds	2
    58  000003                     ___wmul@multiplicand:
    59                           	opt stack 0
    60                           
    61                           ; 2 bytes @ 0x2
    62  000003                     	ds	1
    63  000004                     ___ftpack@exp:
    64                           	opt stack 0
    65                           
    66                           ; 1 bytes @ 0x3
    67  000004                     	ds	1
    68  000005                     ??___fttol:
    69  000005                     ___ftpack@sign:
    70                           	opt stack 0
    71  000005                     ___wmul@product:
    72                           	opt stack 0
    73                           
    74                           ; 2 bytes @ 0x4
    75  000005                     	ds	1
    76  000006                     ??___ftpack:
    77                           
    78                           ; 1 bytes @ 0x5
    79  000006                     	ds	1
    80  000007                     delaySeconds@seconds:
    81                           	opt stack 0
    82                           
    83                           ; 2 bytes @ 0x6
    84  000007                     	ds	2
    85  000009                     ??_delaySeconds:
    86  000009                     ?___lltoft:
    87                           	opt stack 0
    88  000009                     ___lltoft@c:
    89                           	opt stack 0
    90                           
    91                           ; 4 bytes @ 0x8
    92  000009                     	ds	1
    93  00000A                     ___fttol@sign1:
    94                           	opt stack 0
    95  00000A                     delaySeconds@a:
    96                           	opt stack 0
    97                           
    98                           ; 2 bytes @ 0x9
    99  00000A                     	ds	1
   100  00000B                     ___fttol@lval:
   101                           	opt stack 0
   102                           
   103                           ; 4 bytes @ 0xA
   104  00000B                     	ds	2
   105  00000D                     ??___lltoft:
   106                           
   107                           ; 1 bytes @ 0xC
   108  00000D                     	ds	2
   109  00000F                     ___fttol@exp1:
   110                           	opt stack 0
   111                           
   112                           ; 1 bytes @ 0xE
   113  00000F                     	ds	2
   114  000011                     ___lltoft@exp:
   115                           	opt stack 0
   116                           
   117                           ; 1 bytes @ 0x10
   118  000011                     	ds	1
   119  000012                     ?___ftmul:
   120                           	opt stack 0
   121  000012                     ___ftmul@f1:
   122                           	opt stack 0
   123                           
   124                           ; 3 bytes @ 0x11
   125  000012                     	ds	3
   126  000015                     ___ftmul@f2:
   127                           	opt stack 0
   128                           
   129                           ; 3 bytes @ 0x14
   130  000015                     	ds	3
   131  000018                     ??___ftmul:
   132                           
   133                           ; 1 bytes @ 0x17
   134  000018                     	ds	3
   135  00001B                     ___ftmul@exp:
   136                           	opt stack 0
   137                           
   138                           ; 1 bytes @ 0x1A
   139  00001B                     	ds	1
   140  00001C                     ___ftmul@f3_as_product:
   141                           	opt stack 0
   142                           
   143                           ; 3 bytes @ 0x1B
   144  00001C                     	ds	3
   145  00001F                     ___ftmul@cntr:
   146                           	opt stack 0
   147                           
   148                           ; 1 bytes @ 0x1E
   149  00001F                     	ds	1
   150  000020                     ___ftmul@sign:
   151                           	opt stack 0
   152                           
   153                           ; 1 bytes @ 0x1F
   154  000020                     	ds	1
   155  000021                     ??_main:
   156                           
   157                           ; 1 bytes @ 0x20
   158  000021                     	ds	2
   159  000023                     main@tUnlocked:
   160                           	opt stack 0
   161                           
   162                           ; 4 bytes @ 0x22
   163  000023                     	ds	4
   164  000027                     main@tSecondsPerHour:
   165                           	opt stack 0
   166                           
   167                           ; 4 bytes @ 0x26
   168  000027                     	ds	4
   169  00002B                     main@tHours:
   170                           	opt stack 0
   171                           
   172                           ; 3 bytes @ 0x2A
   173  00002B                     	ds	3
   174  00002E                     main@tRemaining:
   175                           	opt stack 0
   176                           
   177                           ; 4 bytes @ 0x2D
   178  00002E                     	ds	4
   179  000032                     main@state:
   180                           	opt stack 0
   181                           
   182                           ; 2 bytes @ 0x31
   183  000032                     	ds	2
   184  000034                     main@tLocked:
   185                           	opt stack 0
   186                           
   187                           ; 3 bytes @ 0x33
   188  000034                     	ds	3
   189                           tblptru	equ	0xFF8
   190                           
   191 ;;
   192 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   193 ;;
   194 ;; *************** function _main *****************
   195 ;; Defined at:
   196 ;;		line 21 in file "main.c"
   197 ;; Parameters:    Size  Location     Type
   198 ;;		None
   199 ;; Auto vars:     Size  Location     Type
   200 ;;  tRemaining      4   45[COMRAM] unsigned long 
   201 ;;  tSecondsPerH    4   38[COMRAM] unsigned long 
   202 ;;  tUnlocked       4   34[COMRAM] unsigned long 
   203 ;;  tLocked         3   51[COMRAM] unsigned long 
   204 ;;  tHours          3   42[COMRAM] unsigned long 
   205 ;;  state           2   49[COMRAM] int 
   206 ;; Return value:  Size  Location     Type
   207 ;;                  2   18[None  ] int 
   208 ;; Registers used:
   209 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   210 ;; Tracked objects:
   211 ;;		On entry : 0/0
   212 ;;		On exit  : 0/0
   213 ;;		Unchanged: 0/0
   214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   215 ;;      Params:         0       0       0       0       0       0       0       0       0
   216 ;;      Locals:        20       0       0       0       0       0       0       0       0
   217 ;;      Temps:          2       0       0       0       0       0       0       0       0
   218 ;;      Totals:        22       0       0       0       0       0       0       0       0
   219 ;;Total ram usage:       22 bytes
   220 ;; Hardware stack levels required when called:    2
   221 ;; This function calls:
   222 ;;		___ftmul
   223 ;;		___fttol
   224 ;;		___lltoft
   225 ;;		_delaySeconds
   226 ;; This function is called by:
   227 ;;		Startup code after reset
   228 ;; This function uses a non-reentrant model
   229 ;;
   230                           
   231                           	psect	text0
   232  007EAC                     __ptext0:
   233                           	opt stack 0
   234  007EAC                     _main:
   235                           	opt stack 29
   236                           
   237                           ;main.c: 22: int state;
   238                           ;main.c: 23: unsigned long tUnlocked, tRemaining, tSecondsPerHour;
   239                           ;main.c: 24: double tHours, tLocked;
   240                           ;main.c: 25: OSCCON = 0xF2;
   241                           
   242                           ;incstack = 0
   243  007EAC  0EF2               	movlw	242
   244  007EAE  6ED3               	movwf	4051,c	;volatile
   245                           
   246                           ;main.c: 26: TRISAbits.TRISA0 = 0;
   247  007EB0  9092               	bcf	3986,0,c	;volatile
   248                           
   249                           ;main.c: 27: TRISAbits.TRISA1 = 0;
   250  007EB2  9292               	bcf	3986,1,c	;volatile
   251                           
   252                           ;main.c: 28: TRISAbits.TRISA2 = 0;
   253  007EB4  9492               	bcf	3986,2,c	;volatile
   254                           
   255                           ;main.c: 29: TRISAbits.TRISA3 = 0;
   256  007EB6  9692               	bcf	3986,3,c	;volatile
   257                           
   258                           ;main.c: 30: TRISAbits.TRISA4 = 1;
   259  007EB8  8892               	bsf	3986,4,c	;volatile
   260                           
   261                           ;main.c: 32: state = 1;
   262  007EBA  0E00               	movlw	0
   263  007EBC  6E33               	movwf	main@state+1,c
   264  007EBE  0E01               	movlw	1
   265  007EC0  6E32               	movwf	main@state,c
   266                           
   267                           ;main.c: 33: tHours = 22;
   268  007EC2  0E00               	movlw	0
   269  007EC4  6E2B               	movwf	main@tHours,c
   270  007EC6  0EB0               	movlw	176
   271  007EC8  6E2C               	movwf	main@tHours+1,c
   272  007ECA  0E41               	movlw	65
   273  007ECC  6E2D               	movwf	main@tHours+2,c
   274                           
   275                           ;main.c: 34: tSecondsPerHour = 3600;
   276  007ECE  0E10               	movlw	16
   277  007ED0  6E27               	movwf	main@tSecondsPerHour,c
   278  007ED2  0E0E               	movlw	14
   279  007ED4  6E28               	movwf	main@tSecondsPerHour+1,c
   280  007ED6  0E00               	movlw	0
   281  007ED8  6E29               	movwf	main@tSecondsPerHour+2,c
   282  007EDA  0E00               	movlw	0
   283  007EDC  6E2A               	movwf	main@tSecondsPerHour+3,c
   284                           
   285                           ;main.c: 35: tLocked = tHours * tSecondsPerHour;
   286  007EDE  C027  F009         	movff	main@tSecondsPerHour,___lltoft@c
   287  007EE2  C028  F00A         	movff	main@tSecondsPerHour+1,___lltoft@c+1
   288  007EE6  C029  F00B         	movff	main@tSecondsPerHour+2,___lltoft@c+2
   289  007EEA  C02A  F00C         	movff	main@tSecondsPerHour+3,___lltoft@c+3
   290  007EEE  ECDD  F03D         	call	___lltoft	;wreg free
   291  007EF2  C009  F012         	movff	?___lltoft,___ftmul@f1
   292  007EF6  C00A  F013         	movff	?___lltoft+1,___ftmul@f1+1
   293  007EFA  C00B  F014         	movff	?___lltoft+2,___ftmul@f1+2
   294  007EFE  C02B  F015         	movff	main@tHours,___ftmul@f2
   295  007F02  C02C  F016         	movff	main@tHours+1,___ftmul@f2+1
   296  007F06  C02D  F017         	movff	main@tHours+2,___ftmul@f2+2
   297  007F0A  EC62  F03E         	call	___ftmul	;wreg free
   298  007F0E  C012  F034         	movff	?___ftmul,main@tLocked
   299  007F12  C013  F035         	movff	?___ftmul+1,main@tLocked+1
   300  007F16  C014  F036         	movff	?___ftmul+2,main@tLocked+2
   301                           
   302                           ;main.c: 36: tUnlocked = 10;
   303  007F1A  0E0A               	movlw	10
   304  007F1C  6E23               	movwf	main@tUnlocked,c
   305  007F1E  0E00               	movlw	0
   306  007F20  6E24               	movwf	main@tUnlocked+1,c
   307  007F22  0E00               	movlw	0
   308  007F24  6E25               	movwf	main@tUnlocked+2,c
   309  007F26  0E00               	movlw	0
   310  007F28  6E26               	movwf	main@tUnlocked+3,c
   311                           
   312                           ;main.c: 37: tRemaining = tLocked;
   313  007F2A  C034  F001         	movff	main@tLocked,___fttol@f1
   314  007F2E  C035  F002         	movff	main@tLocked+1,___fttol@f1+1
   315  007F32  C036  F003         	movff	main@tLocked+2,___fttol@f1+2
   316  007F36  ECDC  F03E         	call	___fttol	;wreg free
   317  007F3A  C001  F02E         	movff	?___fttol,main@tRemaining
   318  007F3E  C002  F02F         	movff	?___fttol+1,main@tRemaining+1
   319  007F42  C003  F030         	movff	?___fttol+2,main@tRemaining+2
   320  007F46  C004  F031         	movff	?___fttol+3,main@tRemaining+3
   321                           
   322                           ;main.c: 39: LATAbits.LATA3 = 0;
   323  007F4A  9689               	bcf	3977,3,c	;volatile
   324                           
   325                           ;main.c: 40: LATAbits.LATA0 = 1;
   326  007F4C  8089               	bsf	3977,0,c	;volatile
   327                           
   328                           ;main.c: 41: LATAbits.LATA2 = 0;
   329  007F4E  9489               	bcf	3977,2,c	;volatile
   330                           
   331                           ;main.c: 42: delaySeconds(1);
   332  007F50  0E00               	movlw	0
   333  007F52  6E08               	movwf	delaySeconds@seconds+1,c
   334  007F54  0E01               	movlw	1
   335  007F56  6E07               	movwf	delaySeconds@seconds,c
   336  007F58  ECBD  F03D         	call	_delaySeconds	;wreg free
   337                           
   338                           ;main.c: 44: switch (state) {
   339                           
   340                           ;main.c: 43: while (1) {
   341  007F5C  D041               	goto	l1041
   342  007F5E                     l21:
   343                           
   344                           ;main.c: 46: LATAbits.LATA2 = 1;
   345  007F5E  8489               	bsf	3977,2,c	;volatile
   346                           
   347                           ;main.c: 47: LATAbits.LATA1 = 0;
   348  007F60  9289               	bcf	3977,1,c	;volatile
   349                           
   350                           ;main.c: 48: LATAbits.LATA0 = 0;
   351  007F62  9089               	bcf	3977,0,c	;volatile
   352  007F64                     l22:
   353                           
   354                           ;main.c: 50: if (PORTAbits.RA4 == 0) {
   355  007F64  B880               	btfsc	3968,4,c	;volatile
   356  007F66  D7FE               	goto	l22
   357                           
   358                           ;main.c: 51: LATAbits.LATA2 = 0;
   359  007F68  9489               	bcf	3977,2,c	;volatile
   360                           
   361                           ;main.c: 52: LATAbits.LATA0 = 1;
   362  007F6A  8089               	bsf	3977,0,c	;volatile
   363                           
   364                           ;main.c: 53: LATAbits.LATA3 = 1;
   365  007F6C  8689               	bsf	3977,3,c	;volatile
   366                           
   367                           ;main.c: 54: delaySeconds(tUnlocked);
   368  007F6E  C023  F007         	movff	main@tUnlocked,delaySeconds@seconds
   369  007F72  C024  F008         	movff	main@tUnlocked+1,delaySeconds@seconds+1
   370  007F76  ECBD  F03D         	call	_delaySeconds	;wreg free
   371                           
   372                           ;main.c: 55: LATAbits.LATA0 = 0;
   373  007F7A  9089               	bcf	3977,0,c	;volatile
   374                           
   375                           ;main.c: 56: state = 1;
   376  007F7C  0E00               	movlw	0
   377  007F7E  6E33               	movwf	main@state+1,c
   378  007F80  0E01               	movlw	1
   379  007F82  6E32               	movwf	main@state,c
   380                           
   381                           ;main.c: 58: }
   382                           ;main.c: 59: }
   383                           ;main.c: 60: state = 1;
   384                           
   385                           ;main.c: 57: break;
   386  007F84  0E00               	movlw	0
   387  007F86  6E33               	movwf	main@state+1,c
   388  007F88  0E01               	movlw	1
   389  007F8A  D029               	goto	L1
   390  007F8C                     l27:
   391                           
   392                           ;main.c: 63: LATAbits.LATA0 = 0;
   393  007F8C  9089               	bcf	3977,0,c	;volatile
   394                           
   395                           ;main.c: 64: LATAbits.LATA1 = 1;
   396  007F8E  8289               	bsf	3977,1,c	;volatile
   397                           
   398                           ;main.c: 65: LATAbits.LATA2 = 0;
   399  007F90  9489               	bcf	3977,2,c	;volatile
   400                           
   401                           ;main.c: 66: LATAbits.LATA3 = 0;
   402  007F92  9689               	bcf	3977,3,c	;volatile
   403                           
   404                           ;main.c: 67: tRemaining = tLocked;
   405  007F94  C034  F001         	movff	main@tLocked,___fttol@f1
   406  007F98  C035  F002         	movff	main@tLocked+1,___fttol@f1+1
   407  007F9C  C036  F003         	movff	main@tLocked+2,___fttol@f1+2
   408  007FA0  ECDC  F03E         	call	___fttol	;wreg free
   409  007FA4  C001  F02E         	movff	?___fttol,main@tRemaining
   410  007FA8  C002  F02F         	movff	?___fttol+1,main@tRemaining+1
   411  007FAC  C003  F030         	movff	?___fttol+2,main@tRemaining+2
   412  007FB0  C004  F031         	movff	?___fttol+3,main@tRemaining+3
   413                           
   414                           ;main.c: 68: while (tRemaining > 0) {
   415  007FB4  D00B               	goto	l1035
   416  007FB6                     l1031:
   417                           
   418                           ;main.c: 69: delaySeconds(1);
   419  007FB6  0E00               	movlw	0
   420  007FB8  6E08               	movwf	delaySeconds@seconds+1,c
   421  007FBA  0E01               	movlw	1
   422  007FBC  6E07               	movwf	delaySeconds@seconds,c
   423  007FBE  ECBD  F03D         	call	_delaySeconds	;wreg free
   424                           
   425                           ;main.c: 70: tRemaining--;
   426  007FC2  062E               	decf	main@tRemaining,f,c
   427  007FC4  0E00               	movlw	0
   428  007FC6  5A2F               	subwfb	main@tRemaining+1,f,c
   429  007FC8  5A30               	subwfb	main@tRemaining+2,f,c
   430  007FCA  5A31               	subwfb	main@tRemaining+3,f,c
   431  007FCC                     l1035:
   432  007FCC  502E               	movf	main@tRemaining,w,c
   433  007FCE  102F               	iorwf	main@tRemaining+1,w,c
   434  007FD0  1030               	iorwf	main@tRemaining+2,w,c
   435  007FD2  1031               	iorwf	main@tRemaining+3,w,c
   436  007FD4  A4D8               	btfss	status,2,c
   437  007FD6  D7EF               	goto	l1031
   438                           
   439                           ;main.c: 71: }
   440                           ;main.c: 72: state = 0;
   441  007FD8  0E00               	movlw	0
   442  007FDA  6E33               	movwf	main@state+1,c
   443  007FDC  0E00               	movlw	0
   444  007FDE                     L1:
   445  007FDE  6E32               	movwf	main@state,c
   446  007FE0                     l1041:
   447  007FE0  C032  F021         	movff	main@state,??_main
   448  007FE4  C033  F022         	movff	main@state+1,??_main+1
   449                           
   450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   451                           ; Switch size 1, requested type "space"
   452                           ; Number of cases is 1, Range of values is 0 to 0
   453                           ; switch strategies available:
   454                           ; Name         Instructions Cycles
   455                           ; simple_byte            4     3 (average)
   456                           ;	Chosen strategy is simple_byte
   457  007FE8  5022               	movf	??_main+1,w,c
   458  007FEA  0A00               	xorlw	0	; case 0
   459  007FEC  A4D8               	btfss	status,2,c
   460  007FEE  D7F8               	goto	l1041
   461                           
   462                           ; Switch size 1, requested type "space"
   463                           ; Number of cases is 2, Range of values is 0 to 1
   464                           ; switch strategies available:
   465                           ; Name         Instructions Cycles
   466                           ; simple_byte            7     4 (average)
   467                           ;	Chosen strategy is simple_byte
   468  007FF0  5021               	movf	??_main,w,c
   469  007FF2  0A00               	xorlw	0	; case 0
   470  007FF4  B4D8               	btfsc	status,2,c
   471  007FF6  D7B3               	goto	l21
   472  007FF8  0A01               	xorlw	1	; case 1
   473  007FFA  B4D8               	btfsc	status,2,c
   474  007FFC  D7C7               	goto	l27
   475  007FFE  D7F0               	goto	l1041
   476  008000                     __end_of_main:
   477                           	opt stack 0
   478                           tblptru	equ	0xFF8
   479                           status	equ	0xFD8
   480                           
   481 ;; *************** function _delaySeconds *****************
   482 ;; Defined at:
   483 ;;		line 14 in file "main.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;  seconds         2    6[COMRAM] unsigned int 
   486 ;; Auto vars:     Size  Location     Type
   487 ;;  a               2    9[COMRAM] int 
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   497 ;;      Params:         2       0       0       0       0       0       0       0       0
   498 ;;      Locals:         2       0       0       0       0       0       0       0       0
   499 ;;      Temps:          1       0       0       0       0       0       0       0       0
   500 ;;      Totals:         5       0       0       0       0       0       0       0       0
   501 ;;Total ram usage:        5 bytes
   502 ;; Hardware stack levels used:    1
   503 ;; Hardware stack levels required when called:    1
   504 ;; This function calls:
   505 ;;		___wmul
   506 ;; This function is called by:
   507 ;;		_main
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           	psect	text1
   512  007B7A                     __ptext1:
   513                           	opt stack 0
   514  007B7A                     _delaySeconds:
   515                           	opt stack 29
   516                           
   517                           ;main.c: 15: int a;
   518                           ;main.c: 16: for (a = 0; a < (seconds * 100); a++) {
   519                           
   520                           ;incstack = 0
   521  007B7A  0E00               	movlw	0
   522  007B7C  6E0B               	movwf	delaySeconds@a+1,c
   523  007B7E  0E00               	movlw	0
   524  007B80  6E0A               	movwf	delaySeconds@a,c
   525  007B82  D00A               	goto	l889
   526  007B84                     l885:
   527                           
   528                           ;main.c: 17: _delay((unsigned long)((10)*(8000000/4000.0)));
   529  007B84  0E1A               	movlw	26
   530  007B86  6E09               	movwf	??_delaySeconds& (0+255),c
   531  007B88  0EF8               	movlw	248
   532  007B8A                     u537:
   533  007B8A  2EE8               	decfsz	wreg,f,c
   534  007B8C  D7FE               	goto	u537
   535  007B8E  2E09               	decfsz	??_delaySeconds& (0+255),f,c
   536  007B90  D7FC               	goto	u537
   537  007B92  D000               	nop2	
   538  007B94  4A0A               	infsnz	delaySeconds@a,f,c
   539  007B96  2A0B               	incf	delaySeconds@a+1,f,c
   540  007B98                     l889:
   541  007B98  C007  F001         	movff	delaySeconds@seconds,___wmul@multiplier
   542  007B9C  C008  F002         	movff	delaySeconds@seconds+1,___wmul@multiplier+1
   543  007BA0  0E00               	movlw	0
   544  007BA2  6E04               	movwf	___wmul@multiplicand+1,c
   545  007BA4  0E64               	movlw	100
   546  007BA6  6E03               	movwf	___wmul@multiplicand,c
   547  007BA8  ECAA  F03D         	call	___wmul	;wreg free
   548  007BAC  5001               	movf	?___wmul,w,c
   549  007BAE  5C0A               	subwf	delaySeconds@a,w,c
   550  007BB0  5002               	movf	?___wmul+1,w,c
   551  007BB2  580B               	subwfb	delaySeconds@a+1,w,c
   552  007BB4  B0D8               	btfsc	status,0,c
   553  007BB6  0012               	return	
   554  007BB8  D7E5               	goto	l885
   555  007BBA                     __end_of_delaySeconds:
   556                           	opt stack 0
   557                           tblptru	equ	0xFF8
   558                           wreg	equ	0xFE8
   559                           status	equ	0xFD8
   560                           
   561 ;; *************** function ___wmul *****************
   562 ;; Defined at:
   563 ;;		line 15 in file "/opt/microchip/xc8/v1.37/sources/common/Umul16.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;  multiplier      2    0[COMRAM] unsigned int 
   566 ;;  multiplicand    2    2[COMRAM] unsigned int 
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  product         2    4[COMRAM] unsigned int 
   569 ;; Return value:  Size  Location     Type
   570 ;;                  2    0[COMRAM] unsigned int 
   571 ;; Registers used:
   572 ;;		wreg, status,2, status,0, prodl, prodh
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   578 ;;      Params:         4       0       0       0       0       0       0       0       0
   579 ;;      Locals:         2       0       0       0       0       0       0       0       0
   580 ;;      Temps:          0       0       0       0       0       0       0       0       0
   581 ;;      Totals:         6       0       0       0       0       0       0       0       0
   582 ;;Total ram usage:        6 bytes
   583 ;; Hardware stack levels used:    1
   584 ;; This function calls:
   585 ;;		Nothing
   586 ;; This function is called by:
   587 ;;		_delaySeconds
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           	psect	text2
   592  007B54                     __ptext2:
   593                           	opt stack 0
   594  007B54                     ___wmul:
   595                           	opt stack 29
   596                           
   597                           ;incstack = 0
   598  007B54  5001               	movf	___wmul@multiplier,w,c
   599  007B56  0203               	mulwf	___wmul@multiplicand,c
   600  007B58  CFF3 F005          	movff	prodl,___wmul@product
   601  007B5C  CFF4 F006          	movff	prodh,___wmul@product+1
   602  007B60  5001               	movf	___wmul@multiplier,w,c
   603  007B62  0204               	mulwf	___wmul@multiplicand+1,c
   604  007B64  50F3               	movf	prodl,w,c
   605  007B66  2606               	addwf	___wmul@product+1,f,c
   606  007B68  5002               	movf	___wmul@multiplier+1,w,c
   607  007B6A  0203               	mulwf	___wmul@multiplicand,c
   608  007B6C  50F3               	movf	prodl,w,c
   609  007B6E  2606               	addwf	___wmul@product+1,f,c
   610  007B70  C005  F001         	movff	___wmul@product,?___wmul
   611  007B74  C006  F002         	movff	___wmul@product+1,?___wmul+1
   612  007B78  0012               	return	
   613  007B7A                     __end_of___wmul:
   614                           	opt stack 0
   615                           tblptru	equ	0xFF8
   616                           prodh	equ	0xFF4
   617                           prodl	equ	0xFF3
   618                           wreg	equ	0xFE8
   619                           status	equ	0xFD8
   620                           
   621 ;; *************** function ___lltoft *****************
   622 ;; Defined at:
   623 ;;		line 35 in file "/opt/microchip/xc8/v1.37/sources/common/lltoft.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;  c               4    8[COMRAM] unsigned long 
   626 ;; Auto vars:     Size  Location     Type
   627 ;;  exp             1   16[COMRAM] unsigned char 
   628 ;; Return value:  Size  Location     Type
   629 ;;                  3    8[COMRAM] float 
   630 ;; Registers used:
   631 ;;		wreg, status,2, status,0, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   637 ;;      Params:         4       0       0       0       0       0       0       0       0
   638 ;;      Locals:         1       0       0       0       0       0       0       0       0
   639 ;;      Temps:          4       0       0       0       0       0       0       0       0
   640 ;;      Totals:         9       0       0       0       0       0       0       0       0
   641 ;;Total ram usage:        9 bytes
   642 ;; Hardware stack levels used:    1
   643 ;; Hardware stack levels required when called:    1
   644 ;; This function calls:
   645 ;;		___ftpack
   646 ;; This function is called by:
   647 ;;		_main
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text3
   652  007BBA                     __ptext3:
   653                           	opt stack 0
   654  007BBA                     ___lltoft:
   655                           	opt stack 29
   656                           
   657                           ;incstack = 0
   658  007BBA  0E8E               	movlw	142
   659  007BBC  6E11               	movwf	___lltoft@exp,c
   660  007BBE  D006               	goto	l989
   661  007BC0                     l987:
   662  007BC0  90D8               	bcf	status,0,c
   663  007BC2  320C               	rrcf	___lltoft@c+3,f,c
   664  007BC4  320B               	rrcf	___lltoft@c+2,f,c
   665  007BC6  320A               	rrcf	___lltoft@c+1,f,c
   666  007BC8  3209               	rrcf	___lltoft@c,f,c
   667  007BCA  2A11               	incf	___lltoft@exp,f,c
   668  007BCC                     l989:
   669  007BCC  0E00               	movlw	0
   670  007BCE  1409               	andwf	___lltoft@c,w,c
   671  007BD0  6E0D               	movwf	??___lltoft& (0+255),c
   672  007BD2  0E00               	movlw	0
   673  007BD4  140A               	andwf	___lltoft@c+1,w,c
   674  007BD6  6E0E               	movwf	(??___lltoft+1)& (0+255),c
   675  007BD8  0E00               	movlw	0
   676  007BDA  140B               	andwf	___lltoft@c+2,w,c
   677  007BDC  6E0F               	movwf	(??___lltoft+2)& (0+255),c
   678  007BDE  0EFF               	movlw	255
   679  007BE0  140C               	andwf	___lltoft@c+3,w,c
   680  007BE2  6E10               	movwf	(??___lltoft+3)& (0+255),c
   681  007BE4  500D               	movf	??___lltoft,w,c
   682  007BE6  100E               	iorwf	??___lltoft+1,w,c
   683  007BE8  100F               	iorwf	??___lltoft+2,w,c
   684  007BEA  1010               	iorwf	??___lltoft+3,w,c
   685  007BEC  A4D8               	btfss	status,2,c
   686  007BEE  D7E8               	goto	l987
   687  007BF0  C009  F001         	movff	___lltoft@c,___ftpack@arg
   688  007BF4  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
   689  007BF8  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
   690  007BFC  C011  F004         	movff	___lltoft@exp,___ftpack@exp
   691  007C00  0E00               	movlw	0
   692  007C02  6E05               	movwf	___ftpack@sign,c
   693  007C04  EC0B  F03E         	call	___ftpack	;wreg free
   694  007C08  C001  F009         	movff	?___ftpack,?___lltoft
   695  007C0C  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
   696  007C10  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
   697  007C14  0012               	return	
   698  007C16                     __end_of___lltoft:
   699                           	opt stack 0
   700                           tblptru	equ	0xFF8
   701                           prodh	equ	0xFF4
   702                           prodl	equ	0xFF3
   703                           wreg	equ	0xFE8
   704                           status	equ	0xFD8
   705                           
   706 ;; *************** function ___fttol *****************
   707 ;; Defined at:
   708 ;;		line 44 in file "/opt/microchip/xc8/v1.37/sources/common/fttol.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;  f1              3    0[COMRAM] float 
   711 ;; Auto vars:     Size  Location     Type
   712 ;;  lval            4   10[COMRAM] unsigned long 
   713 ;;  exp1            1   14[COMRAM] unsigned char 
   714 ;;  sign1           1    9[COMRAM] unsigned char 
   715 ;; Return value:  Size  Location     Type
   716 ;;                  4    0[COMRAM] long 
   717 ;; Registers used:
   718 ;;		wreg, status,2, status,0
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   724 ;;      Params:         4       0       0       0       0       0       0       0       0
   725 ;;      Locals:         6       0       0       0       0       0       0       0       0
   726 ;;      Temps:          5       0       0       0       0       0       0       0       0
   727 ;;      Totals:        15       0       0       0       0       0       0       0       0
   728 ;;Total ram usage:       15 bytes
   729 ;; Hardware stack levels used:    1
   730 ;; This function calls:
   731 ;;		Nothing
   732 ;; This function is called by:
   733 ;;		_main
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           	psect	text4
   738  007DB8                     __ptext4:
   739                           	opt stack 0
   740  007DB8                     ___fttol:
   741                           	opt stack 30
   742                           
   743                           ;incstack = 0
   744  007DB8  C003  F005         	movff	___fttol@f1+2,??___fttol
   745  007DBC  6A06               	clrf	(??___fttol+1)& (0+255),c
   746  007DBE  6A07               	clrf	(??___fttol+2)& (0+255),c
   747  007DC0  3402               	rlcf	___fttol@f1+1,w,c
   748  007DC2  3605               	rlcf	??___fttol& (0+255),f,c
   749  007DC4  E301               	bnc	u421
   750  007DC6  8006               	bsf	(??___fttol+1)& (0+255),0,c
   751  007DC8                     u421:
   752  007DC8  5005               	movf	??___fttol,w,c
   753  007DCA  6E0F               	movwf	___fttol@exp1,c
   754  007DCC  500F               	movf	___fttol@exp1,w,c
   755  007DCE  A4D8               	btfss	status,2,c
   756  007DD0  D009               	goto	l945
   757  007DD2  0E00               	movlw	0
   758  007DD4  6E01               	movwf	?___fttol,c
   759  007DD6  0E00               	movlw	0
   760  007DD8  6E02               	movwf	?___fttol+1,c
   761  007DDA  0E00               	movlw	0
   762  007DDC  6E03               	movwf	?___fttol+2,c
   763  007DDE  0E00               	movlw	0
   764  007DE0  6E04               	movwf	?___fttol+3,c
   765  007DE2  0012               	return	
   766  007DE4                     l945:
   767  007DE4  0E17               	movlw	23
   768  007DE6  6E05               	movwf	??___fttol& (0+255),c
   769  007DE8  C001  F006         	movff	___fttol@f1,??___fttol+1
   770  007DEC  C002  F007         	movff	___fttol@f1+1,??___fttol+2
   771  007DF0  C003  F008         	movff	___fttol@f1+2,??___fttol+3
   772  007DF4  2805               	incf	??___fttol,w,c
   773  007DF6  6E09               	movwf	(??___fttol+4)& (0+255),c
   774  007DF8  D004               	goto	u440
   775  007DFA                     u445:
   776  007DFA  90D8               	bcf	status,0,c
   777  007DFC  3208               	rrcf	??___fttol+3,f,c
   778  007DFE  3207               	rrcf	??___fttol+2,f,c
   779  007E00  3206               	rrcf	??___fttol+1,f,c
   780  007E02                     u440:
   781  007E02  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
   782  007E04  D7FA               	goto	u445
   783  007E06  5006               	movf	??___fttol+1,w,c
   784  007E08  6E0A               	movwf	___fttol@sign1,c
   785  007E0A  8E02               	bsf	___fttol@f1+1,7,c
   786  007E0C  0EFF               	movlw	255
   787  007E0E  1601               	andwf	___fttol@f1,f,c
   788  007E10  0EFF               	movlw	255
   789  007E12  1602               	andwf	___fttol@f1+1,f,c
   790  007E14  0E00               	movlw	0
   791  007E16  1603               	andwf	___fttol@f1+2,f,c
   792  007E18  5001               	movf	___fttol@f1,w,c
   793  007E1A  6E0B               	movwf	___fttol@lval,c
   794  007E1C  5002               	movf	___fttol@f1+1,w,c
   795  007E1E  6E0C               	movwf	___fttol@lval+1,c
   796  007E20  5003               	movf	___fttol@f1+2,w,c
   797  007E22  6E0D               	movwf	___fttol@lval+2,c
   798  007E24  6A0E               	clrf	___fttol@lval+3,c
   799  007E26  0E8E               	movlw	142
   800  007E28  5E0F               	subwf	___fttol@exp1,f,c
   801  007E2A  AE0F               	btfss	___fttol@exp1,7,c
   802  007E2C  D016               	goto	l967
   803  007E2E  500F               	movf	___fttol@exp1,w,c
   804  007E30  0A80               	xorlw	128
   805  007E32  0F8F               	addlw	143
   806  007E34  B0D8               	btfsc	status,0,c
   807  007E36  D009               	goto	l963
   808  007E38  0E00               	movlw	0
   809  007E3A  6E01               	movwf	?___fttol,c
   810  007E3C  0E00               	movlw	0
   811  007E3E  6E02               	movwf	?___fttol+1,c
   812  007E40  0E00               	movlw	0
   813  007E42  6E03               	movwf	?___fttol+2,c
   814  007E44  0E00               	movlw	0
   815  007E46  6E04               	movwf	?___fttol+3,c
   816  007E48  0012               	return	
   817  007E4A                     l963:
   818  007E4A  90D8               	bcf	status,0,c
   819  007E4C  320E               	rrcf	___fttol@lval+3,f,c
   820  007E4E  320D               	rrcf	___fttol@lval+2,f,c
   821  007E50  320C               	rrcf	___fttol@lval+1,f,c
   822  007E52  320B               	rrcf	___fttol@lval,f,c
   823  007E54  3E0F               	incfsz	___fttol@exp1,f,c
   824  007E56  D7F9               	goto	l963
   825  007E58  D015               	goto	l977
   826  007E5A                     l967:
   827  007E5A  0E17               	movlw	23
   828  007E5C  640F               	cpfsgt	___fttol@exp1,c
   829  007E5E  D00F               	goto	l975
   830  007E60  0E00               	movlw	0
   831  007E62  6E01               	movwf	?___fttol,c
   832  007E64  0E00               	movlw	0
   833  007E66  6E02               	movwf	?___fttol+1,c
   834  007E68  0E00               	movlw	0
   835  007E6A  6E03               	movwf	?___fttol+2,c
   836  007E6C  0E00               	movlw	0
   837  007E6E  6E04               	movwf	?___fttol+3,c
   838  007E70  0012               	return	
   839  007E72                     l973:
   840  007E72  90D8               	bcf	status,0,c
   841  007E74  360B               	rlcf	___fttol@lval,f,c
   842  007E76  360C               	rlcf	___fttol@lval+1,f,c
   843  007E78  360D               	rlcf	___fttol@lval+2,f,c
   844  007E7A  360E               	rlcf	___fttol@lval+3,f,c
   845  007E7C  060F               	decf	___fttol@exp1,f,c
   846  007E7E                     l975:
   847  007E7E  500F               	movf	___fttol@exp1,w,c
   848  007E80  A4D8               	btfss	status,2,c
   849  007E82  D7F7               	goto	l973
   850  007E84                     l977:
   851  007E84  500A               	movf	___fttol@sign1,w,c
   852  007E86  B4D8               	btfsc	status,2,c
   853  007E88  D008               	goto	l981
   854  007E8A  1E0E               	comf	___fttol@lval+3,f,c
   855  007E8C  1E0D               	comf	___fttol@lval+2,f,c
   856  007E8E  1E0C               	comf	___fttol@lval+1,f,c
   857  007E90  6C0B               	negf	___fttol@lval,c
   858  007E92  0E00               	movlw	0
   859  007E94  220C               	addwfc	___fttol@lval+1,f,c
   860  007E96  220D               	addwfc	___fttol@lval+2,f,c
   861  007E98  220E               	addwfc	___fttol@lval+3,f,c
   862  007E9A                     l981:
   863  007E9A  C00B  F001         	movff	___fttol@lval,?___fttol
   864  007E9E  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
   865  007EA2  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
   866  007EA6  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
   867  007EAA  0012               	return	
   868  007EAC                     __end_of___fttol:
   869                           	opt stack 0
   870                           tblptru	equ	0xFF8
   871                           prodh	equ	0xFF4
   872                           prodl	equ	0xFF3
   873                           wreg	equ	0xFE8
   874                           status	equ	0xFD8
   875                           
   876 ;; *************** function ___ftmul *****************
   877 ;; Defined at:
   878 ;;		line 62 in file "/opt/microchip/xc8/v1.37/sources/common/ftmul.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;  f1              3   17[COMRAM] float 
   881 ;;  f2              3   20[COMRAM] float 
   882 ;; Auto vars:     Size  Location     Type
   883 ;;  f3_as_produc    3   27[COMRAM] unsigned um
   884 ;;  sign            1   31[COMRAM] unsigned char 
   885 ;;  cntr            1   30[COMRAM] unsigned char 
   886 ;;  exp             1   26[COMRAM] unsigned char 
   887 ;; Return value:  Size  Location     Type
   888 ;;                  3   17[COMRAM] float 
   889 ;; Registers used:
   890 ;;		wreg, status,2, status,0, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   896 ;;      Params:         6       0       0       0       0       0       0       0       0
   897 ;;      Locals:         6       0       0       0       0       0       0       0       0
   898 ;;      Temps:          3       0       0       0       0       0       0       0       0
   899 ;;      Totals:        15       0       0       0       0       0       0       0       0
   900 ;;Total ram usage:       15 bytes
   901 ;; Hardware stack levels used:    1
   902 ;; Hardware stack levels required when called:    1
   903 ;; This function calls:
   904 ;;		___ftpack
   905 ;; This function is called by:
   906 ;;		_main
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           	psect	text5
   911  007CC4                     __ptext5:
   912                           	opt stack 0
   913  007CC4                     ___ftmul:
   914                           	opt stack 29
   915                           
   916                           ;incstack = 0
   917  007CC4  C014  F018         	movff	___ftmul@f1+2,??___ftmul
   918  007CC8  6A19               	clrf	(??___ftmul+1)& (0+255),c
   919  007CCA  6A1A               	clrf	(??___ftmul+2)& (0+255),c
   920  007CCC  3413               	rlcf	___ftmul@f1+1,w,c
   921  007CCE  3618               	rlcf	??___ftmul& (0+255),f,c
   922  007CD0  E301               	bnc	u361
   923  007CD2  8019               	bsf	(??___ftmul+1)& (0+255),0,c
   924  007CD4                     u361:
   925  007CD4  5018               	movf	??___ftmul,w,c
   926  007CD6  6E1B               	movwf	___ftmul@exp,c
   927  007CD8  501B               	movf	___ftmul@exp,w,c
   928  007CDA  A4D8               	btfss	status,2,c
   929  007CDC  D007               	goto	l897
   930  007CDE  0E00               	movlw	0
   931  007CE0  6E12               	movwf	?___ftmul,c
   932  007CE2  0E00               	movlw	0
   933  007CE4  6E13               	movwf	?___ftmul+1,c
   934  007CE6  0E00               	movlw	0
   935  007CE8  6E14               	movwf	?___ftmul+2,c
   936  007CEA  0012               	return	
   937  007CEC                     l897:
   938  007CEC  C017  F018         	movff	___ftmul@f2+2,??___ftmul
   939  007CF0  6A19               	clrf	(??___ftmul+1)& (0+255),c
   940  007CF2  6A1A               	clrf	(??___ftmul+2)& (0+255),c
   941  007CF4  3416               	rlcf	___ftmul@f2+1,w,c
   942  007CF6  3618               	rlcf	??___ftmul& (0+255),f,c
   943  007CF8  E301               	bnc	u381
   944  007CFA  8019               	bsf	(??___ftmul+1)& (0+255),0,c
   945  007CFC                     u381:
   946  007CFC  5018               	movf	??___ftmul,w,c
   947  007CFE  6E20               	movwf	___ftmul@sign,c
   948  007D00  5020               	movf	___ftmul@sign,w,c
   949  007D02  A4D8               	btfss	status,2,c
   950  007D04  D007               	goto	l903
   951  007D06  0E00               	movlw	0
   952  007D08  6E12               	movwf	?___ftmul,c
   953  007D0A  0E00               	movlw	0
   954  007D0C  6E13               	movwf	?___ftmul+1,c
   955  007D0E  0E00               	movlw	0
   956  007D10  6E14               	movwf	?___ftmul+2,c
   957  007D12  0012               	return	
   958  007D14                     l903:
   959  007D14  5020               	movf	___ftmul@sign,w,c
   960  007D16  0F7B               	addlw	123
   961  007D18  261B               	addwf	___ftmul@exp,f,c
   962  007D1A  C014  F020         	movff	___ftmul@f1+2,___ftmul@sign
   963  007D1E  5017               	movf	___ftmul@f2+2,w,c
   964  007D20  1A20               	xorwf	___ftmul@sign,f,c
   965  007D22  0E80               	movlw	128
   966  007D24  1620               	andwf	___ftmul@sign,f,c
   967  007D26  8E13               	bsf	___ftmul@f1+1,7,c
   968  007D28  8E16               	bsf	___ftmul@f2+1,7,c
   969  007D2A  0EFF               	movlw	255
   970  007D2C  1615               	andwf	___ftmul@f2,f,c
   971  007D2E  0EFF               	movlw	255
   972  007D30  1616               	andwf	___ftmul@f2+1,f,c
   973  007D32  0E00               	movlw	0
   974  007D34  1617               	andwf	___ftmul@f2+2,f,c
   975  007D36  0E00               	movlw	0
   976  007D38  6E1C               	movwf	___ftmul@f3_as_product,c
   977  007D3A  0E00               	movlw	0
   978  007D3C  6E1D               	movwf	___ftmul@f3_as_product+1,c
   979  007D3E  0E00               	movlw	0
   980  007D40  6E1E               	movwf	___ftmul@f3_as_product+2,c
   981  007D42  0E07               	movlw	7
   982  007D44  6E1F               	movwf	___ftmul@cntr,c
   983  007D46                     l917:
   984  007D46  A012               	btfss	___ftmul@f1,0,c
   985  007D48  D006               	goto	l921
   986  007D4A  5015               	movf	___ftmul@f2,w,c
   987  007D4C  261C               	addwf	___ftmul@f3_as_product,f,c
   988  007D4E  5016               	movf	___ftmul@f2+1,w,c
   989  007D50  221D               	addwfc	___ftmul@f3_as_product+1,f,c
   990  007D52  5017               	movf	___ftmul@f2+2,w,c
   991  007D54  221E               	addwfc	___ftmul@f3_as_product+2,f,c
   992  007D56                     l921:
   993  007D56  90D8               	bcf	status,0,c
   994  007D58  3214               	rrcf	___ftmul@f1+2,f,c
   995  007D5A  3213               	rrcf	___ftmul@f1+1,f,c
   996  007D5C  3212               	rrcf	___ftmul@f1,f,c
   997  007D5E  90D8               	bcf	status,0,c
   998  007D60  3615               	rlcf	___ftmul@f2,f,c
   999  007D62  3616               	rlcf	___ftmul@f2+1,f,c
  1000  007D64  3617               	rlcf	___ftmul@f2+2,f,c
  1001  007D66  2E1F               	decfsz	___ftmul@cntr,f,c
  1002  007D68  D7EE               	goto	l917
  1003  007D6A  0E09               	movlw	9
  1004  007D6C  6E1F               	movwf	___ftmul@cntr,c
  1005  007D6E                     l927:
  1006  007D6E  A012               	btfss	___ftmul@f1,0,c
  1007  007D70  D006               	goto	l931
  1008  007D72  5015               	movf	___ftmul@f2,w,c
  1009  007D74  261C               	addwf	___ftmul@f3_as_product,f,c
  1010  007D76  5016               	movf	___ftmul@f2+1,w,c
  1011  007D78  221D               	addwfc	___ftmul@f3_as_product+1,f,c
  1012  007D7A  5017               	movf	___ftmul@f2+2,w,c
  1013  007D7C  221E               	addwfc	___ftmul@f3_as_product+2,f,c
  1014  007D7E                     l931:
  1015  007D7E  90D8               	bcf	status,0,c
  1016  007D80  3214               	rrcf	___ftmul@f1+2,f,c
  1017  007D82  3213               	rrcf	___ftmul@f1+1,f,c
  1018  007D84  3212               	rrcf	___ftmul@f1,f,c
  1019  007D86  90D8               	bcf	status,0,c
  1020  007D88  321E               	rrcf	___ftmul@f3_as_product+2,f,c
  1021  007D8A  321D               	rrcf	___ftmul@f3_as_product+1,f,c
  1022  007D8C  321C               	rrcf	___ftmul@f3_as_product,f,c
  1023  007D8E  2E1F               	decfsz	___ftmul@cntr,f,c
  1024  007D90  D7EE               	goto	l927
  1025  007D92  C01C  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1026  007D96  C01D  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1027  007D9A  C01E  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1028  007D9E  C01B  F004         	movff	___ftmul@exp,___ftpack@exp
  1029  007DA2  C020  F005         	movff	___ftmul@sign,___ftpack@sign
  1030  007DA6  EC0B  F03E         	call	___ftpack	;wreg free
  1031  007DAA  C001  F012         	movff	?___ftpack,?___ftmul
  1032  007DAE  C002  F013         	movff	?___ftpack+1,?___ftmul+1
  1033  007DB2  C003  F014         	movff	?___ftpack+2,?___ftmul+2
  1034  007DB6  0012               	return	
  1035  007DB8                     __end_of___ftmul:
  1036                           	opt stack 0
  1037                           tblptru	equ	0xFF8
  1038                           prodh	equ	0xFF4
  1039                           prodl	equ	0xFF3
  1040                           wreg	equ	0xFE8
  1041                           status	equ	0xFD8
  1042                           
  1043 ;; *************** function ___ftpack *****************
  1044 ;; Defined at:
  1045 ;;		line 62 in file "/opt/microchip/xc8/v1.37/sources/common/float.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;  arg             3    0[COMRAM] unsigned um
  1048 ;;  exp             1    3[COMRAM] unsigned char 
  1049 ;;  sign            1    4[COMRAM] unsigned char 
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  3    0[COMRAM] float 
  1054 ;; Registers used:
  1055 ;;		wreg, status,2, status,0
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1061 ;;      Params:         5       0       0       0       0       0       0       0       0
  1062 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1063 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1064 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1065 ;;Total ram usage:        8 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; This function calls:
  1068 ;;		Nothing
  1069 ;; This function is called by:
  1070 ;;		___ftmul
  1071 ;;		___lltoft
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text6
  1076  007C16                     __ptext6:
  1077                           	opt stack 0
  1078  007C16                     ___ftpack:
  1079                           	opt stack 29
  1080                           
  1081                           ;incstack = 0
  1082  007C16  5004               	movf	___ftpack@exp,w,c
  1083  007C18  B4D8               	btfsc	status,2,c
  1084  007C1A  D005               	goto	l851
  1085  007C1C  5001               	movf	___ftpack@arg,w,c
  1086  007C1E  1002               	iorwf	___ftpack@arg+1,w,c
  1087  007C20  1003               	iorwf	___ftpack@arg+2,w,c
  1088  007C22  A4D8               	btfss	status,2,c
  1089  007C24  D00C               	goto	l857
  1090  007C26                     l851:
  1091  007C26  0E00               	movlw	0
  1092  007C28  6E01               	movwf	?___ftpack,c
  1093  007C2A  0E00               	movlw	0
  1094  007C2C  6E02               	movwf	?___ftpack+1,c
  1095  007C2E  0E00               	movlw	0
  1096  007C30  6E03               	movwf	?___ftpack+2,c
  1097  007C32  0012               	return	
  1098  007C34                     l855:
  1099  007C34  2A04               	incf	___ftpack@exp,f,c
  1100  007C36  90D8               	bcf	status,0,c
  1101  007C38  3203               	rrcf	___ftpack@arg+2,f,c
  1102  007C3A  3202               	rrcf	___ftpack@arg+1,f,c
  1103  007C3C  3201               	rrcf	___ftpack@arg,f,c
  1104  007C3E                     l857:
  1105  007C3E  0E00               	movlw	0
  1106  007C40  1401               	andwf	___ftpack@arg,w,c
  1107  007C42  6E06               	movwf	??___ftpack& (0+255),c
  1108  007C44  0E00               	movlw	0
  1109  007C46  1402               	andwf	___ftpack@arg+1,w,c
  1110  007C48  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1111  007C4A  0EFE               	movlw	254
  1112  007C4C  1403               	andwf	___ftpack@arg+2,w,c
  1113  007C4E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1114  007C50  5006               	movf	??___ftpack,w,c
  1115  007C52  1007               	iorwf	??___ftpack+1,w,c
  1116  007C54  1008               	iorwf	??___ftpack+2,w,c
  1117  007C56  B4D8               	btfsc	status,2,c
  1118  007C58  D00C               	goto	l863
  1119  007C5A  D7EC               	goto	l855
  1120  007C5C                     l859:
  1121  007C5C  2A04               	incf	___ftpack@exp,f,c
  1122  007C5E  0E01               	movlw	1
  1123  007C60  2601               	addwf	___ftpack@arg,f,c
  1124  007C62  0E00               	movlw	0
  1125  007C64  2202               	addwfc	___ftpack@arg+1,f,c
  1126  007C66  0E00               	movlw	0
  1127  007C68  2203               	addwfc	___ftpack@arg+2,f,c
  1128  007C6A  90D8               	bcf	status,0,c
  1129  007C6C  3203               	rrcf	___ftpack@arg+2,f,c
  1130  007C6E  3202               	rrcf	___ftpack@arg+1,f,c
  1131  007C70  3201               	rrcf	___ftpack@arg,f,c
  1132  007C72                     l863:
  1133  007C72  0E00               	movlw	0
  1134  007C74  1401               	andwf	___ftpack@arg,w,c
  1135  007C76  6E06               	movwf	??___ftpack& (0+255),c
  1136  007C78  0E00               	movlw	0
  1137  007C7A  1402               	andwf	___ftpack@arg+1,w,c
  1138  007C7C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1139  007C7E  0EFF               	movlw	255
  1140  007C80  1403               	andwf	___ftpack@arg+2,w,c
  1141  007C82  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1142  007C84  5006               	movf	??___ftpack,w,c
  1143  007C86  1007               	iorwf	??___ftpack+1,w,c
  1144  007C88  1008               	iorwf	??___ftpack+2,w,c
  1145  007C8A  B4D8               	btfsc	status,2,c
  1146  007C8C  D006               	goto	l867
  1147  007C8E  D7E6               	goto	l859
  1148  007C90                     l865:
  1149  007C90  0604               	decf	___ftpack@exp,f,c
  1150  007C92  90D8               	bcf	status,0,c
  1151  007C94  3601               	rlcf	___ftpack@arg,f,c
  1152  007C96  3602               	rlcf	___ftpack@arg+1,f,c
  1153  007C98  3603               	rlcf	___ftpack@arg+2,f,c
  1154  007C9A                     l867:
  1155  007C9A  BE02               	btfsc	___ftpack@arg+1,7,c
  1156  007C9C  D003               	goto	l258
  1157  007C9E  0E02               	movlw	2
  1158  007CA0  6004               	cpfslt	___ftpack@exp,c
  1159  007CA2  D7F6               	goto	l865
  1160  007CA4                     l258:
  1161  007CA4  A004               	btfss	___ftpack@exp,0,c
  1162  007CA6  9E02               	bcf	___ftpack@arg+1,7,c
  1163  007CA8  90D8               	bcf	status,0,c
  1164  007CAA  3204               	rrcf	___ftpack@exp,f,c
  1165  007CAC  5004               	movf	___ftpack@exp,w,c
  1166  007CAE  1203               	iorwf	___ftpack@arg+2,f,c
  1167  007CB0  5005               	movf	___ftpack@sign,w,c
  1168  007CB2  A4D8               	btfss	status,2,c
  1169  007CB4  8E03               	bsf	___ftpack@arg+2,7,c
  1170  007CB6  C001  F001         	movff	___ftpack@arg,?___ftpack
  1171  007CBA  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1172  007CBE  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1173  007CC2  0012               	return	
  1174  007CC4                     __end_of___ftpack:
  1175                           	opt stack 0
  1176  0000                     tblptru	equ	0xFF8
  1177                           prodh	equ	0xFF4
  1178                           prodl	equ	0xFF3
  1179                           wreg	equ	0xFE8
  1180                           status	equ	0xFD8
  1181                           tblptru	equ	0xFF8
  1182                           prodh	equ	0xFF4
  1183                           prodl	equ	0xFF3
  1184                           wreg	equ	0xFE8
  1185                           status	equ	0xFD8
  1186                           
  1187                           	psect	rparam
  1188  0000                     tblptru	equ	0xFF8
  1189                           prodh	equ	0xFF4
  1190                           prodl	equ	0xFF3
  1191                           wreg	equ	0xFE8
  1192                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     54      54
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___ftmul
    _delaySeconds->___wmul
    ___lltoft->___ftpack
    ___ftmul->___lltoft

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    4105
                                             32 COMRAM    22    22      0
                            ___ftmul
                            ___fttol
                           ___lltoft
                       _delaySeconds
 ---------------------------------------------------------------------------------
 (1) _delaySeconds                                         5     3      2     420
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     245
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lltoft                                             9     5      4    1411
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     338
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    1771
                                             17 COMRAM    15     9      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1299
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftmul
     ___ftpack
     ___lltoft (ARG)
       ___ftpack
   ___fttol
   ___lltoft
     ___ftpack
   _delaySeconds
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     36      36       1       56.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Jul 16 03:06:52 2016

                     l21 7F5E                       l22 7F64                       l27 7F8C  
    ___wmul@multiplicand 0003                      l258 7CA4                      l903 7D14  
                    l921 7D56                      l851 7C26                      l931 7D7E  
                    l917 7D46                      l863 7C72                      l855 7C34  
                    l927 7D6E                      l865 7C90                      l857 7C3E  
                    l945 7DE4                      l867 7C9A                      l859 7C5C  
                    l963 7E4A                      l981 7E9A                      l973 7E72  
                    l885 7B84                      l975 7E7E                      l967 7E5A  
                    l897 7CEC                      l977 7E84                      l889 7B98  
                    l987 7BC0                      l989 7BCC                      u421 7DC8  
                    u440 7E02                      u361 7CD4                      u381 7CFC  
                    u445 7DFA                      u537 7B8A                      wreg 000FE8  
            main@tLocked 0034             __CFG_WDT$OFF 000000                     l1031 7FB6  
                   l1041 7FE0                     l1035 7FCC                     _main 7EAC  
           ___ftpack@arg 0001             ___ftpack@exp 0004                     prodh 000FF4  
                   prodl 000FF3                     start 0000             ___ftmul@cntr 001F  
           ___param_bank 000010             ___ftmul@sign 0020     __end_of_delaySeconds 7BBA  
           ___fttol@exp1 000F             ___fttol@lval 000B                    ?_main 0001  
        __end_of___ftmul 7DB8          __end_of___fttol 7EAC             ___lltoft@exp 0011  
          ___ftpack@sign 0005                    status 000FD8          __initialization 7B4A  
           __end_of_main 8000                   ??_main 0021            ___fttol@sign1 000A  
          __activetblptr 000002         __end_of___ftpack 7CC4         __end_of___lltoft 7C16  
                 _OSCCON 000FD3      delaySeconds@seconds 0007            main@tUnlocked 0023  
                 ___wmul 7B54                ??___ftmul 0018                ??___fttol 0005  
  ___ftmul@f3_as_product 001C                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 7B4A    __size_of_delaySeconds 0040            ___rparam_used 000001  
             ___ftmul@f1 0012               ___ftmul@f2 0015               ___fttol@f1 0001  
         __pcstackCOMRAM 0001               ___lltoft@c 0009             _delaySeconds 7B7A  
                ?___wmul 0001           main@tRemaining 002E                ?___ftpack 0001  
              ?___lltoft 0009                  __Hparam 0000                  __Lparam 0000  
        __size_of___wmul 0026                  ___ftmul 7CC4                  ___fttol 7DB8  
                __pcinit 7B4A               ??___ftpack 0006                  __ramtop 0800  
             ??___lltoft 000D                  __ptext0 7EAC                  __ptext1 7B7A  
                __ptext2 7B54                  __ptext3 7BBA                  __ptext4 7DB8  
                __ptext5 7CC4                  __ptext6 7C16     end_of_initialization 7B4A  
          __Lmediumconst 0000                _PORTAbits 000F80            delaySeconds@a 000A  
              _TRISAbits 000F92               main@tHours 002B              ___ftmul@exp 001B  
         __end_of___wmul 7B7A      start_initialization 7B4A                 ??___wmul 0005  
      __size_of___ftpack 00AE        __size_of___lltoft 005C                 ?___ftmul 0012  
               ?___fttol 0001           ___wmul@product 0005                 _LATAbits 000F89  
      ___wmul@multiplier 0001                main@state 0032                 __Hrparam 0000  
               __Lrparam 0000         __size_of___ftmul 00F4         __size_of___fttol 00F4  
               ___ftpack 7C16                 ___lltoft 7BBA            ?_delaySeconds 0007  
          __size_of_main 0154           ??_delaySeconds 0009      main@tSecondsPerHour 0027  
    __CFG_FOSC$INTOSC_EC 000000  
